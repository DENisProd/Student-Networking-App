services:
  postgresql:
    image: postgres:14-alpine
    container_name: postgresql
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - spring
#  pgadmin:
#    container_name: pgadmin4
#    image: dpage/pgadmin4:latest
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    networks:
#      - spring
  minio:
    image: 'minio/minio:latest'
    container_name: minio
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-9090}:9090'
    environment:
      MINIO_ROOT_USER: 'root'
      MINIO_ROOT_PASSWORD: 'password'
    volumes:
      - 'minio:/data/minio'
    command: minio server /data/minio --console-address ":9090"
    networks:
      - spring
  rabbitmq:
    image: rabbitmq:4.0.2-management-alpine
    container_name: rabbitmq_media
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring
  mongodb_container:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
      MONGO_INITDB_DATABASE: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - spring
#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    restart: always
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongodb:27017
#      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
#      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
#      ME_CONFIG_MONGODB_SERVER: mongodb
#      ME_CONFIG_BASICAUTH_USERNAME: mongo
#      ME_CONFIG_BASICAUTH_PASSWORD: password
#    networks:
#      - spring
  post-ms:
    container_name: post-ms
    build:
      context: ./post-ms/
    ports:
      - "8093:8093"
    depends_on:
      - mongodb_container
    networks:
      - spring
  gateway-ms:
    container_name: gateway-ms
    build:
      context: ./gateway-ms/
    ports:
      - "8090:8090"
    networks:
      - spring
    extra_hosts:
      - "host.docker.internal:host-gateway"
  category-ms:
    container_name: category-ms
    build:
      context: ./category-ms/
    ports:
      - "8083:8083"
    networks:
      - spring
    depends_on:
      - postgresql
  media:
    container_name: media
    build:
      context: ./media/
    ports:
      - "8082:8082"
    networks:
      - spring
    depends_on:
      - postgresql
      - minio
  finder:
    container_name: finder
    build:
      context: ./finder/
    ports:
      - "8071:8071"
    networks:
      - spring
    depends_on:
      - postgresql

volumes:
  postgresql:
  pgadmin-data:
  minio:
    driver: local
  mongodb_data_container:

networks:
  spring:
    driver: bridge